:root {
  --global-font-size: 19px;
  --global-font-color: #0a0a0a;
  --global-bg-color: #f7f7f0;
  --global-padding: 2vw;
  --global-columns: 3;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  outline: none;
}

::selection,
::-moz-selection {
  background: rgba(182, 242, 41, 0.2);
}

body {
  font-family: "Verdana", sans-serif;
  font-size: var(--global-font-size);
  line-height: 1.4;
  color: var(--global-font-color);
  font-smoothing: antialiased;
  overflow-x: hidden;
  transform: scale3d(1, 1, 1);
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  background-color: var(--global-bg-color);
}

/* Typography */

#wordmark {
  display: block;
  text-decoration: underline;
  text-align: center;
  font-size: 3rem;
  margin-top: var(--global-padding);
  margin-bottom: 4rem;
  transform: rotate(-10deg);
}

h1,
h2,
h3,
h4,
h5 {
  font-family: system, -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Lucida Grande", sans-serif;
  font-weight: 400;
}

h5 {
  font-size: 16px;
  margin-top: 0.5rem;
}

a {
  color: var(--global-font-color);
}

p.big,
p.bigger {
  font-size: 1.15em;
  margin: 0;
  padding: 0;
}

p.bigger {
  font-size: 1.45em;
  font-weight: 500;
}

p {
  margin-top: var(--global-padding);
  max-width: 90%;
}

p + p,
h2 + p {
  text-indent: 2em;
  margin-top: 0;
}

pre {
  font-size: 14px;
}

blockquote {
  font-style: italic;
}

.note {
  background-color: Azure;
  padding: 0.5em 0.5em 0.5em 1em;
  margin-top: var(--global-padding);
  margin-bottom: var(--global-padding);
  margin-left: -1em;
  font-size: 0.85em;
  font-family: monospace;
  color: #333;
}

/* Navigation */

nav {
  margin-top: var(--global-padding);
  margin-bottom: var(--global-padding);
}

nav > a {
  display: block;
  text-decoration: none;
  position: relative;
}

nav > a.current {
  text-decoration: underline;
}

/* Layout */

#site {
  margin: 0 auto;
  height: 100%;
}

#topbar {
  overflow: hidden;
  background-color: transparent;
  padding-bottom: var(--global-padding);
}

#topbar.shinrinyoku {
  border-color: #F8F4F4;
  background-color: #E2C785;
}

#topbar.black {
  border-color: #fefefe;
}

#topbar.waves {
  border-color: #6B7D67;
  background-color: #eee;
}

#topbar.mundane {
  border-color: #4100FF;
}

.page {
  max-width: 1280px;
  margin: 0 auto;
  padding: var(--global-padding) 0;
  position: relative;
}

.page.spaced {
  padding-top: calc(var(--global-padding) * 4);
  padding-bottom: calc(var(--global-padding) * 4);
}

.page img {
  display: block;
  max-width: 100%;
  max-height: calc(100vh - (var(--global-padding) / 2.5));
}

.col-inner {
  padding-bottom: var(--global-padding);
  padding-right: calc(var(--global-padding) / 2);
  padding-left: calc(var(--global-padding) / 2);
}

column:nth-child(3n+3) .col-inner {
  padding-right: 0;
}

column:nth-child(3n+1) .col-inner {
  padding-left: 0;
}

.spread img {
  max-width: 100%;
  max-height: calc(100vh - var(--global-padding));
}

.down {
  margin-top: 4vw;
}

.up {
  margin-top: -6vw;
}

.post {
  width: auto;
  overflow: hidden;
  overflow-wrap: break-word;
}

.post h2,
.post h3 {
  margin-top: var(--global-padding);
}

.post > img {
  margin: var(--global-padding) 0;
}

.post > p ,
.post > ul, 
.post > ol {
  font-size: var(--global-font-size);
  text-indent: 0;
  margin-top: 1rem;
}

.post li {
  margin-left: var(--global-padding);
}

.meta {
  font-size: 16px;
  text-align: right;
  padding-top: 1rem;
  color: #aaa;
}

#post-navigation {
  margin-top: 4rem;
}

/* Grid */

/* Raster grid subsystem (rsms.me/raster) */
grid {
  display: grid;
  --grid-tc: repeat(6, 1fr);
  grid-template-columns: var(--grid-tc);
  --grid-cs: 1; /* column start */
  --grid-ce: -1 /* column end */
}

/* c -- cell or column */
grid > column {
  display: block;
  appearance: none;
  -webkit-appearance: none;
}

grid[columns="1"] { --grid-tc: repeat(1, 1fr) }
grid[columns="2"] { --grid-tc: repeat(2, 1fr) }
grid[columns="3"] { --grid-tc: repeat(3, 1fr) }
grid[columns="4"] { --grid-tc: repeat(4, 1fr) }
grid[columns="5"] { --grid-tc: repeat(5, 1fr) }
grid[columns="6"] { --grid-tc: repeat(6, 1fr) }
grid[columns="7"] { --grid-tc: repeat(7, 1fr) }
grid[columns="8"] { --grid-tc: repeat(8, 1fr) }
grid[columns="9"] { --grid-tc: repeat(9, 1fr) }
grid[columns="10"] { --grid-tc: repeat(10, 1fr) }
grid[columns="11"] { --grid-tc: repeat(11, 1fr) }
grid[columns="12"] { --grid-tc: repeat(12, 1fr) }

/* span=start... */
grid > column[span^="1"] { --grid-cs: 1 }
grid > column[span^="2"] { --grid-cs: 2 }
grid > column[span^="3"] { --grid-cs: 3 }
grid > column[span^="4"] { --grid-cs: 4 }
grid > column[span^="5"] { --grid-cs: 5 }
grid > column[span^="6"] { --grid-cs: 6 }
grid > column[span^="7"] { --grid-cs: 7 }
grid > column[span^="8"] { --grid-cs: 8 }
grid > column[span^="9"] { --grid-cs: 9 }
grid > column[span^="10"] { --grid-cs: 10 }
grid > column[span^="11"] { --grid-cs: 11 }
grid > column[span^="12"] { --grid-cs: 12 }

/* span=...+width, span=...-end */
grid > column[span$="+1"], grid > column[span="1"] { --grid-ce: 1 }
grid > column[span$="+2"], grid > column[span$="-1"], grid > column[span="2"] { --grid-ce: 2 }
grid > column[span$="+3"], grid > column[span$="-2"], grid > column[span="3"] { --grid-ce: 3 }
grid > column[span$="+4"], grid > column[span$="-3"], grid > column[span="4"] { --grid-ce: 4 }
grid > column[span$="+5"], grid > column[span$="-4"], grid > column[span="5"] { --grid-ce: 5 }
grid > column[span$="+6"], grid > column[span$="-5"], grid > column[span="6"] { --grid-ce: 6 }
grid > column[span$="+7"], grid > column[span$="-6"], grid > column[span="7"] { --grid-ce: 7 }
grid > column[span$="+8"], grid > column[span$="-7"], grid > column[span="8"] { --grid-ce: 8 }
grid > column[span$="+9"], grid > column[span$="-8"], grid > column[span="9"] { --grid-ce: 9 }
grid > column[span$="+10"], grid > column[span$="-9"], grid > column[span="10"] { --grid-ce: 10 }
grid > column[span$="+11"], grid > column[span$="-10"], grid > column[span="11"] { --grid-ce: 11 }
grid > column[span$="+12"], grid > column[span$="-11"], grid > column[span="12"] { --grid-ce: 12 }
grid > column[span$="-12"] { --grid-ce: 13 }

/* connect vars */
grid > column[span] { grid-column-end: span var(--grid-ce) }
grid > column[span*="+"], grid > column[span*="-"], grid > column[span*=".."] {
  grid-column-start: var(--grid-cs) }
grid > column[span*="-"], grid > column[span*=".."] {
  grid-column-end: var(--grid-ce) }
grid > column[span="row"] { grid-column: 1 / -1 }

/* for window width <= 600 */
@media only screen and (max-width: 600px) {
  grid[columns-s="1"] { --grid-tc: repeat(1, 1fr) }
  grid[columns-s="2"] { --grid-tc: repeat(2, 1fr) }
  grid[columns-s="3"] { --grid-tc: repeat(3, 1fr) }
  grid[columns-s="4"] { --grid-tc: repeat(4, 1fr) }
  grid[columns-s="5"] { --grid-tc: repeat(5, 1fr) }
  grid[columns-s="6"] { --grid-tc: repeat(6, 1fr) }
  grid[columns-s="7"] { --grid-tc: repeat(7, 1fr) }
  grid[columns-s="8"] { --grid-tc: repeat(8, 1fr) }
  grid[columns-s="9"] { --grid-tc: repeat(9, 1fr) }
  grid[columns-s="10"] { --grid-tc: repeat(10, 1fr) }
  grid[columns-s="11"] { --grid-tc: repeat(11, 1fr) }
  grid[columns-s="12"] { --grid-tc: repeat(12, 1fr) }
  
  /* span-s=start... */
  grid > column[span-s^="1"] { --grid-cs: 1 }
  grid > column[span-s^="2"] { --grid-cs: 2 }
  grid > column[span-s^="3"] { --grid-cs: 3 }
  grid > column[span-s^="4"] { --grid-cs: 4 }
  grid > column[span-s^="5"] { --grid-cs: 5 }
  grid > column[span-s^="6"] { --grid-cs: 6 }
  grid > column[span-s^="7"] { --grid-cs: 7 }
  grid > column[span-s^="8"] { --grid-cs: 8 }
  grid > column[span-s^="9"] { --grid-cs: 9 }
  grid > column[span-s^="10"] { --grid-cs: 10 }
  grid > column[span-s^="11"] { --grid-cs: 11 }
  grid > column[span-s^="12"] { --grid-cs: 12 }
  
  /* span-s=...+width, span-s=...-end */
  grid > column[span-s$="+1"], grid > column[span-s="1"] { --grid-ce: 1 }
  grid > column[span-s$="+2"], grid > column[span-s$="-1"], grid > column[span-s="2"] { --grid-ce: 2 }
  grid > column[span-s$="+3"], grid > column[span-s$="-2"], grid > column[span-s="3"] { --grid-ce: 3 }
  grid > column[span-s$="+4"], grid > column[span-s$="-3"], grid > column[span-s="4"] { --grid-ce: 4 }
  grid > column[span-s$="+5"], grid > column[span-s$="-4"], grid > column[span-s="5"] { --grid-ce: 5 }
  grid > column[span-s$="+6"], grid > column[span-s$="-5"], grid > column[span-s="6"] { --grid-ce: 6 }
  grid > column[span-s$="+7"], grid > column[span-s$="-6"], grid > column[span-s="7"] { --grid-ce: 7 }
  grid > column[span-s$="+8"], grid > column[span-s$="-7"], grid > column[span-s="8"] { --grid-ce: 8 }
  grid > column[span-s$="+9"], grid > column[span-s$="-8"], grid > column[span-s="9"] { --grid-ce: 9 }
  grid > column[span-s$="+10"], grid > column[span-s$="-9"], grid > column[span-s="10"] { --grid-ce: 10 }
  grid > column[span-s$="+11"], grid > column[span-s$="-10"], grid > column[span-s="11"] { --grid-ce: 11 }
  grid > column[span-s$="+12"], grid > column[span-s$="-11"], grid > column[span-s="12"] { --grid-ce: 12 }
  grid > column[span-s$="-12"] { --grid-ce: 13 }
  
  /* connect vars */
  grid > column[span-s] { grid-column-end: span var(--grid-ce) }
  grid > column[span-s*="+"], grid > column[span-s*="-"], grid > column[span-s*=".."] {
    grid-column-start: var(--grid-cs) }
  grid > column[span-s*="-"], grid > column[span-s*=".."] {
    grid-column-end: var(--grid-ce) }
  grid > column[span-s="row"] { grid-column: 1 / -1 }
}

/* for window width >= 1600 */
@media only screen and (min-width: 1599px) {
  grid[columns-l="1"] { --grid-tc: repeat(1, 1fr) }
  grid[columns-l="2"] { --grid-tc: repeat(2, 1fr) }
  grid[columns-l="3"] { --grid-tc: repeat(3, 1fr) }
  grid[columns-l="4"] { --grid-tc: repeat(4, 1fr) }
  grid[columns-l="5"] { --grid-tc: repeat(5, 1fr) }
  grid[columns-l="6"] { --grid-tc: repeat(6, 1fr) }
  grid[columns-l="7"] { --grid-tc: repeat(7, 1fr) }
  grid[columns-l="8"] { --grid-tc: repeat(8, 1fr) }
  grid[columns-l="9"] { --grid-tc: repeat(9, 1fr) }
  grid[columns-l="10"] { --grid-tc: repeat(10, 1fr) }
  grid[columns-l="11"] { --grid-tc: repeat(11, 1fr) }
  grid[columns-l="12"] { --grid-tc: repeat(12, 1fr) }
  
  /* span-l=start... */
  grid > column[span-l^="1"] { --grid-cs: 1 }
  grid > column[span-l^="2"] { --grid-cs: 2 }
  grid > column[span-l^="3"] { --grid-cs: 3 }
  grid > column[span-l^="4"] { --grid-cs: 4 }
  grid > column[span-l^="5"] { --grid-cs: 5 }
  grid > column[span-l^="6"] { --grid-cs: 6 }
  grid > column[span-l^="7"] { --grid-cs: 7 }
  grid > column[span-l^="8"] { --grid-cs: 8 }
  grid > column[span-l^="9"] { --grid-cs: 9 }
  grid > column[span-l^="10"] { --grid-cs: 10 }
  grid > column[span-l^="11"] { --grid-cs: 11 }
  grid > column[span-l^="12"] { --grid-cs: 12 }
  
  /* span-l=...+width, span-l=...-end */
  grid > column[span-l$="+1"], grid > column[span-l="1"] { --grid-ce: 1 }
  grid > column[span-l$="+2"], grid > column[span-l$="-1"], grid > column[span-l="2"] { --grid-ce: 2 }
  grid > column[span-l$="+3"], grid > column[span-l$="-2"], grid > column[span-l="3"] { --grid-ce: 3 }
  grid > column[span-l$="+4"], grid > column[span-l$="-3"], grid > column[span-l="4"] { --grid-ce: 4 }
  grid > column[span-l$="+5"], grid > column[span-l$="-4"], grid > column[span-l="5"] { --grid-ce: 5 }
  grid > column[span-l$="+6"], grid > column[span-l$="-5"], grid > column[span-l="6"] { --grid-ce: 6 }
  grid > column[span-l$="+7"], grid > column[span-l$="-6"], grid > column[span-l="7"] { --grid-ce: 7 }
  grid > column[span-l$="+8"], grid > column[span-l$="-7"], grid > column[span-l="8"] { --grid-ce: 8 }
  grid > column[span-l$="+9"], grid > column[span-l$="-8"], grid > column[span-l="9"] { --grid-ce: 9 }
  grid > column[span-l$="+10"], grid > column[span-l$="-9"], grid > column[span-l="10"] { --grid-ce: 10 }
  grid > column[span-l$="+11"], grid > column[span-l$="-10"], grid > column[span-l="11"] { --grid-ce: 11 }
  grid > column[span-l$="+12"], grid > column[span-l$="-11"], grid > column[span-l="12"] { --grid-ce: 12 }
  grid > column[span-l$="-12"] { --grid-ce: 13 }
  
  /* connect vars */
  grid > column[span-l] { grid-column-end: span var(--grid-ce) }
  grid > column[span-l*="+"], grid > column[span-l*="-"], grid > column[span-l*=".."] {
    grid-column-start: var(--grid-cs) }
  grid > column[span-l*="-"], grid > column[span-l*=".."] {
    grid-column-end: var(--grid-ce) }
  grid > column[span-l="row"] { grid-column: 1 / -1 }
}


/* Photography */

.book {
  max-width: 1140px;
  margin: 0 auto;
}

.book > grid,
.book > .spread {
  padding-bottom: var(--global-padding);
}

.book > grid:not(.spread) > .photo:last-child > img {
  float: right;
}

.book > grid:not(.spread) > .photo.text:last-child {
  margin-left: var(--global-padding);
  margin-bottom: calc(2 * var(--global-padding));
}

.book > .split > .photo {
  margin-right: calc(var(--global-padding) / 2);
}

.book > .split > .photo:last-child {
  margin-right: 0;
  margin-left: calc(var(--global-padding) / 2);
}

.book .bottom {
  display: flex;
  align-items: flex-end;
}

.title > h1 {
  font-size: 7em;
  font-weight: 700;
  line-height: 0.9;
}

.title > h2 {
  font-size: 3em;
  font-weight: 500;
  line-height: 1.1;
}

.title > *,
.title > p.big,
.title > p.bigger {
  /*max-width: 70%;*/
  margin-right: calc(var(--global-padding) * 3);
}

.title > h2 + p {
  text-indent: 2em;
}

#shinrinyoku {
  background-color: #E2C785;
}

#shinrinyoku h1 {
  color: #F8F4F4;
  font-size: 6em;
  line-height: .8;
  max-width: 800px;
  margin: 0;
}

#shinrinyoku h2 {
  margin: 0;
  color: #F8F4F4;
  font-size: 5em;
  font-weight: 600;
  font-family:"ヒラギノ角ゴ Pro W3", "Hiragino Kaku Gothic Pro",Osaka, "メイリオ", Meiryo, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;
}

#shinrinyoku p {
  color: #F8F4F4;
}

#shinrinyoku .book p {
  max-width: 80%;
}

#shinrinyoku a {
  color: #F8F4F4;
}

#shinrinyoku .grid:last-child {
  padding-bottom: 4rem;
}

#waves {
  background-color: #eee;
}

#waves h1,
#waves h2,
#waves h2 a,
#waves p {
  color: #6B7D67;
}

#maui h1,
#maui h2,
#maui h2 a,
#maui p {
  color: #6c5f67;
}

#mundane .book > grid {
  padding-bottom: 0;
}

#mundane h1 {
  color: #4100FF;
  margin-top: -10px;
  margin-bottom: 0;
  word-break: break-all;
  line-height: .8;
}

#mundane p,
#mundane h2,
#mundane h2 a {
  color: #4100FF;
}

#couleur h1,
#couleur h2,
#couleur h2 a,
#couleur p {
  color: #445583;
}

#picos h1,
#picos h2,
#picos h2 a,
#picos p {
  color: #193038;
}

/* Footer */

footer {
  font-size: calc(var(--global-font-size) / 1.25);
  line-height: 1.7;
}

footer column {
  margin-bottom: calc(var(--global-padding) * 6);
}

footer column:last-child {
  text-align: right;
}

#copy {
  font-size: 13px;
  color: #999;
  max-width: 80%;
}

/* Responsive */

@media screen and (max-width: 414px) {
  :root {
    --global-font-size: 17px;
  }

  nav > * {
    width: 100%;
  }

  .title > * {
    max-width: 100%;
  }

  .title > h1 {
    font-size: 22vw;
  }

  .title > h2 {
    font-size: 14vw;
  }

  p.bigger {
    font-size: 7vw;
  }

  p.big {
    font-size: 1.3rem;
  }

  #shinrinyoku h2 {
    font-size: 3em;
  }

  .book grid > column[span="6"]:first-child {
    margin-bottom: var(--global-padding);
  }

  h1,
  .col-inner {
    margin-bottom: calc(var(--global-padding) * 3);
  }

  column {
    max-width: 100%;
  }
}

@media screen and (max-width: 960px) {
  #site {
    padding: var(--global-padding);
  }

  .book > .grid:not(.spread) > .photo:first-child {
    margin-right: 0;
    margin-bottom: calc(var(--global-padding) * 2);
  }

  .book > .grid:not(.spread) > .photo + .photo {
    margin-left: 0;
  }
}

@media screen and (max-width: 1440px) {
  .content.grid > .meta,
  .content.grid > .post,
  .content.grid .post + div {
    min-width: auto;
  }
}

@media screen and (min-width: 1441px) {
  body {
    font-size: calc(var(--global-font-size) * 1.25);
  }
  .page {
    min-width: 1440px;
    max-width: 1500px;
  }
  grid .photo > img {
    max-height: 1100px;
  }
  .spread .photo > img {
    margin: 0 auto;
  }
}


/* Keyframes */

@keyframes fadein {
  from { opacity: 0; transform: translateY(-100px); }
  to   { opacity: 1; transform: translateY(0); }
}

@keyframes justfade {
  from { opacity: 0; }
  to   { opacity: 1; }
}

@keyframes riseup {
  from { opacity: 0; transform: translateY(100px); }
  to   { opacity: 1; transform: translateY(0); }
}
